<meta charset="UTF-8">
<style type="text/css">
<!--
body {
	margin: 0;
	padding: 0;
	color: #000;
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 100%;
	line-height: 1.4;
	background-color: #FFFFFF;
}

h1, h2, h3, h4, h5, h6, p {
	margin: 0;
	padding: 5px 0 0 15px;
}

/* ~~ This fixed width container surrounds all other blocks ~~ */
.container {
	width: 85%;
	background: #FFFFFF;
	margin: 0 auto; /* the auto value on the sides, coupled with the width, centers the layout */
}
/* ~~ The header is not given a width. It will extend the full width of your layout. ~~ */
header {
	font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
	font-size: xx-large;
	font-style: oblique;
	color: #FFF;
	background-color: #FFFFFF;
	background-image: url(images/headerbg.jpg);
}

.sidebar1 {
	float: right;
	width: 40%;
	padding-bottom: 10px;
	padding-top: 10px;
}
.content {
	width: 50%;
	float: left;
	padding-top: 0px;
	padding-right: 0;
	padding-bottom: 0px;
	padding-left: 0;
}


/* ~~ The footer ~~ */
footer {
	padding: 5px 0;
	position: relative;/* this gives IE6 hasLayout to properly clear */
	clear: both; /* this clear property forces the .container to understand where the columns end and contain them */
	background-color: #000066;
	background-image: url(images/headerbg.jpg);
}

/*HTML 5 support - Sets new HTML 5 tags to display:block so browsers know how to render the tags properly. */
header, section, footer, aside, nav, article, figure {
	display: block;
}
.darken {
	color: #999;
}
-->
</style>




<script src="pidcrypt.js"></script>
<script src="pidcrypt_util.js"></script>
<script src="asn1.js"></script><!--needed for parsing decrypted rsa certificate-->
<script src="jsbn.js"></script><!--needed for rsa math operations-->
<script src="rng.js"></script><!--needed for rsa key generation-->
<script src="prng4.js"></script><!--needed for rsa key generation-->
<script src="rsa.js"></script><!--needed for rsa en-/decryption-->
<script src="pagefunction.js"></script>
<script src="readPriFile.js"></script>
<script src="readPubFile.js"></script>
<script src="localFunctions.js"></script>



<div class="container">
  <header>
    <h1>SAD<span class="darken">CS</span></h1>
    <h6>Secure Anonymous Decentralized <span class="darken">Communication System</span></h6>
  </header>
  
   <%= form_for @message, :html => {:id => 'msgForm'} do |form| %>
    <ul>
      <li><%= form.label :name %><%= form.text_field :username %></li>
      <li><%= form.label :body %><%= form.text_field :body %></li>
      <li><%= form.submit %> <button type="button" onclick="encryptAndSubmit()">EncryptAndSubmit</button></li>
    </ul>
  <% end %>
  <form name="theForm">
  <div class="sidebar1">
    <aside>
      <p>Your Private Key</p>
      		<table>
            	<tr>
                	<td>
      					<div id="prigood"></div>
                    </td>
                    <td>
      					<input id="private_key_file" type="file" name="private_key_file" onChange="startPriRead()" />
                    </td>
                </tr>
             </table>
      <p>Friend's Public Key</p>
      		<table>
            	<tr>
                	<td>
            			<div id="pubgood"></div>
                    </td>
                	<td>
       					<input id="public_key_file" type="file" name="public_key_file" onChange="startPubRead()" />
                     </td>
                </tr>
            </table>
      <p>Message to Friends</p>
      <textarea name="input" cols="40" rows="6">Text to encrypt.</textarea> 
      <br>
    </aside>
  </div>
  <article class="content">
    <h1><!-- end .content -->Message</h1>
    
		<input value="Encrypt" onclick="compute('encrypt');" type="BUTTON" id="encryptButton">
		<input value="Decrypt" onclick="decrypt();" type="BUTTON" id="decryptButton"><a name="results"></a>
		<p>
	</p><h4>Results:</h4>
		<div id="ENCRYPT"></div><br>
		<div id="DECRYPT"></div><br>
		<div id="DEBUG"></div><br>
  </article>
  </form>
  
  
      	<table class="messages" id="messages">
    		<col class="username" />
    		<col class="body" />
    		<% @messages.each do |message| %>
      			<%= render 'message', :message => message %>
    		<% end %>
  		</table>
  
  <footer>
    <p>&nbsp;</p>
</footer>
<!-- end .container --></div>
